#!/bin/bash

##############################################################################################
# Commands:
#   -cache:dl1 <config> and -cache:dl2 <config>
#       Where <config> is <name>:<nsets>:<bsize>:<assoc>:<repl>
#   Looks like the defaults for these are:
#       -cache:dl1       dl1:128:32:4:l  (16KB)  # l1 data cache config, i.e., {<config>|none}
#       -cache:dl2       ul2:1024:64:4:l (256KB) # l2 data cache config, i.e., {<config>|none}
##############################################################################################
GC_TEST="RUN"
AN_TEST="RUN"
GZ_TEST="RUN"
GO_TEST="RUN"

echo -e "\n\n-------------------------------------------------------------------------"
echo -e "Begin SimpleScalar benchmark simulations for PA2 Q1\n"

# Test Suite Constants
max_inst="-max:inst 1000000000"
bsize="64"
L1_assoc="8"
L2_assoc="8"
out_dir="q1.benchout.$(date +"%Y-%m-%d.%H-%M-%S")"
grep_for="{<config>|dl1lat|dl2lat|sim_num_insn|sim_total_insn|sim_cycle|sim_IPC|dl1.accesses|dl1.hits|dl1.misses|dl1.miss_rate|ul2.accesses|ul2.hits|ul2.misses|ul2.miss_rate"

mkdir -p benchmarks/$out_dir
#for repl in "l" "x"; do
for repl in "x"; do
    
    if [ "$repl" = "l" ]; then
        repl_str="LRU"
    elif [ "$repl" = "x" ]; then
        repl_str="LIP"
    fi

    #for nsets in "T1 L1_bsize L2_bsize" "T2 L1_bsize L2_bsize" "etc"; do
    for nsets in "1 64 128" "2 64 256" "3 64 512" "4 64 1024" "5 64 2048" "6 64 4096" "7 64 8192"; do
        set -- $nsets

        # Benchmark Variables
        test_description="T$1, Replacement policy = $repl_str, L1 nsets = $2, L2 nsets = $3"
        test_desc="T$1_$repl_str"
        L1_nsets=$2
        L2_nsets=$3

        # Benchmark Constants        
        sim_out="simout.$test_desc"
        prog_out="progout.$test_desc"
        cach_cfg="-cache:dl1 dl1:$L1_nsets:$bsize:$L1_assoc:$repl -cache:dl2 ul2:$L2_nsets:$bsize:$L2_assoc:$repl"
        base_cmd="../../simplesim-3.0/sim-outorder"

        echo -e "\n  Test Description: $test_description"


        # Begin Anagram ----------------------------
        if [ "$AN_TEST" = "RUN" ]; then
            exe="anagram"
            out_cmd="-redir:sim ../benchmarks/$out_dir/$exe/$exe.$sim_out -redir:prog ../benchmarks/$out_dir/$exe/$exe.$prog_out"

            cd $exe
            mkdir -p ../benchmarks/$out_dir/$exe

            echo "    $exe..."
            echo "      Start time: $(date)"
            echo "        $base_cmd $out_cmd $cach_cfg $exe words < anagram.in"
            $base_cmd $out_cmd $cach_cfg $exe words < anagram.in
            egrep -in $grep_for ../benchmarks/$out_dir/$exe/$exe.$sim_out > "../benchmarks/$out_dir/$exe/$exe.$sim_out.short"
            
            mkdir -p ../benchmarks/$out_dir/$exe/sim_out_dir ../benchmarks/$out_dir/$exe/prog_out_dir
            mv ../benchmarks/$out_dir/$exe/$exe.$sim_out  ../benchmarks/$out_dir/$exe/sim_out_dir
            mv ../benchmarks/$out_dir/$exe/$exe.$prog_out ../benchmarks/$out_dir/$exe/prog_out_dir
            
            echo -e "      End time: $(date)\n"
            cd ..
        fi
        # End Anagram --------------------------------
        
        
        # Begin GCC --------------------------------
        if [ "$GC_TEST" = "RUN" ]; then
            exe="gcc"
            out_cmd="-redir:sim ../benchmarks/$out_dir/$exe/$exe.$sim_out -redir:prog ../benchmarks/$out_dir/$exe/$exe.$prog_out"

            cd $exe
            mkdir -p ../benchmarks/$out_dir/$exe
            
            echo "    gcc..."
            echo "      Start time: $(date)"
            echo "        $base_cmd $out_cmd $cach_cfg $max_inst $exe -O 166.i"
            $base_cmd $out_cmd $cach_cfg $max_inst $exe -O 166.i
            egrep -in $grep_for ../benchmarks/$out_dir/$exe/$exe.$sim_out > "../benchmarks/$out_dir/$exe/$exe.$sim_out.short"
            
            mkdir -p ../benchmarks/$out_dir/$exe/sim_out_dir ../benchmarks/$out_dir/$exe/prog_out_dir
            mv ../benchmarks/$out_dir/$exe/$exe.$sim_out  ../benchmarks/$out_dir/$exe/sim_out_dir
            mv ../benchmarks/$out_dir/$exe/$exe.$prog_out ../benchmarks/$out_dir/$exe/prog_out_dir
            
            echo -e "      End time: $(date)\n"
            cd ..
        fi
        # End GCC --------------------------------


        # Begin Gzip ----------------------------
        if [ "$GZ_TEST" = "RUN" ]; then
            exe="gzip"
            out_cmd="-redir:sim ../benchmarks/$out_dir/$exe/$exe.$sim_out -redir:prog ../benchmarks/$out_dir/$exe/$exe.$prog_out"

            cd $exe
            mkdir -p ../benchmarks/$out_dir/$exe

            echo "    $exe..."
            echo "      Start time: $(date)"
            echo "        $base_cmd $out_cmd $cach_cfg $max_inst $exe input.graphic"
            $base_cmd $out_cmd $cach_cfg $max_inst $exe input.graphic
            egrep -in $grep_for ../benchmarks/$out_dir/$exe/$exe.$sim_out > "../benchmarks/$out_dir/$exe/$exe.$sim_out.short"
            
            mkdir -p ../benchmarks/$out_dir/$exe/sim_out_dir ../benchmarks/$out_dir/$exe/prog_out_dir
            mv ../benchmarks/$out_dir/$exe/$exe.$sim_out  ../benchmarks/$out_dir/$exe/sim_out_dir
            mv ../benchmarks/$out_dir/$exe/$exe.$prog_out ../benchmarks/$out_dir/$exe/prog_out_dir
            
            echo -e "      End time: $(date)\n"
            cd ..
        fi
        # End Gzip --------------------------------


        # Begin Go ----------------------------
        if [ "$GO_TEST" = "RUN" ]; then
            exe="go"
            out_cmd="-redir:sim ../benchmarks/$out_dir/$exe/$exe.$sim_out -redir:prog ../benchmarks/$out_dir/$exe/$exe.$prog_out"

            cd $exe
            mkdir -p ../benchmarks/$out_dir/$exe

            echo "    $exe..."
            echo "      Start time: $(date)"
            echo "        $base_cmd $out_cmd $cach_cfg $exe 50 9 2stone9.in"
            $base_cmd $out_cmd $cach_cfg $exe 50 9 2stone9.in
            egrep -in $grep_for ../benchmarks/$out_dir/$exe/$exe.$sim_out > "../benchmarks/$out_dir/$exe/$exe.$sim_out.short"
            
            mkdir -p ../benchmarks/$out_dir/$exe/sim_out_dir ../benchmarks/$out_dir/$exe/prog_out_dir
            mv ../benchmarks/$out_dir/$exe/$exe.$sim_out  ../benchmarks/$out_dir/$exe/sim_out_dir
            mv ../benchmarks/$out_dir/$exe/$exe.$prog_out ../benchmarks/$out_dir/$exe/prog_out_dir
            
            echo -e "      End time: $(date)\n"
            cd ..
        fi
        # End Go --------------------------------
    done
done

echo -e "\nEnd SimpleScalar benchmark simulations for PA2 Q1"
echo -e "-------------------------------------------------------------------------\n"
